First excerice in R-studio
Download the files from iol

Open the R-file in R-studio

When you put # its a comment on the command we are going to use
By pressing ctrl and enter it is printing the first row
So our first row got printed into the Console window


###Very basic opertation
We can also use R as a calculator
Now we printed the nex row : 23
The row after says 1+1 
Press ctrl and enter 
2

2-1
1

3*2
6

9/2
4.5

9%/%2
4

9%%2
1

3^2
9

9^(1/2)
3

#### Logical operators  (can google to see all different operators to use in R-studio)
1 == 1  (to check if two things are equal. need to use equal two times)
TRUE

1 == 2
FALSE

1 < 2 (ask if something is minor than somehting)
TRUE

1:3 > 2 (ask if something is greater than 2) : Will create a sequence 
1>2   2>2   3>2
FALSE FALSE TRUE

1:3 >= 2 (ask if something is great than 2 or equal to 2) (=has to be after the <or>)
FALSE TRUE TRUE

1:3 <= 2
TRUE TRUE FALSE

2 + 2 == 5
FALSE

2 + 2 != 5
TRUE

9/2 == (9%/%2 + (9%%2)/2)
TRUE

### Sequencies and repetitions
1:10
1 2 3 4 5 6 7 8 9 10

seq(1, 10) # seq function
1 2 3 4 5 6 7 8 9 10

?seq (putting a questionmark infront of a command, you will open the help function. right bottom window)

seq(1, 11, 2) (start our sequnce from 1, end at 11. every second step 2)
1  3  5  7  9 11

 # repetition function 
 rep(1, 10) (what you want to repeat 1. how many times: 10)

rep("Hi!", 3) (characters always in " ". want to repeat hi! 3 times)
"Hi!" "Hi!" "Hi!"

rep(T, 7) (T = TRUE, F = FALSE) (Going to repeat TRUE 7 times)
TRUE TRUE TRUE TRUE TRUE TRUE TRUE

# help function
help("rep") 
help("rep") # help function

rep(c("A", "B"), each = 5)  (Repeat A five times. B five times)
"A" "A" "A" "A" "A" "B" "B" "B" "B" "B"

rep(c("A", "B"), length = 9) (repeat A and B every second time. lengt is 9)
"A" "B" "A" "B" "A" "B" "A" "B" "A"

rep(1:3, each = 5)
1 1 1 1 1 2 2 2 2 2 3 3 3 3 3  

rep(1:3, length = 8)
1 2 3 1 2 3 1 2

### Vectors
First datastructuers
v <- 1:3 (we assign a sequence from 1 to 3, to a creat an object called v)
nothing appears

v
1 2 3

class(v) # class function
The values are integer

v <- c(1.5, pi, 3.66) # c function (c = concatinate. put everything you want to paste together)
assign these numbers to v

v
1.500000 3.141593 3.660000

class(v)
The values are numeric

v <- c("Pinus", "Salix", "Populus")
assigning these names to v

v
"Pinus" "Salix" "Populus"

class(v)
The values are character

v <- c(TRUE, FALSE, TRUE) alternative v<-c(T,F,T)
assigning these names to v

v
TRUE FALSE  TRUE

class(v)
The values are logical

LETTERS
"A" "B" "C" "D" "E" "F" "G" "H" "I" "J" "K" "L" "M" "N" "O" "P" "Q" "R" "S" "T" "U" "V" "W""X" "Y" "Z"

### Exercise 1, which type of vector is "v <- 1:10"?

v <- 1:10
______(v) 
class(v)
"integer"

### Exercise 1b, create a vector of integers from 10 to 1 (length = 10)
v<-c(10:1)
v
10  9  8  7  6  5  4  3  2  1
____

### Subsetting and modifying vectors

v <- 1:10
v
1  2  3  4  5  6  7  8  9 10

v[5] (will take the fifth element)
5

v[10] (will take the 10th element)
10

v[10] <- 1 (gave value 10 1)
v
1 2 3 4 5 6 7 8 9 1

v[c(1, 3)]
1 3

v[c(3, 1)]
3 1

v <- 1:10
length(v) # length function (the size of our vector. 10 elements)
10

v[length(v)]
10

v[length(v) - 1]
9

v[v >= 5] (want to access the elements greater, or equal to 10)
5  6  7  8  9 10

a <- c(1, 10)
v[v == a] (which are equal to v and a)
1 10

LETTERS[1:10] (first 10 letters in the alphabet)
"A" "B" "C" "D" "E" "F" "G" "H" "I" "J"

v <- 1:3
v[c(TRUE, FALSE, TRUE)]
1 3

### Exercise 2a, extract the second to last and the last elements from the following vector
### you should extract both by using length() and ...
v <- c(1:4, LETTERS[1:10], 23.5, 67, 91, 21, 7:-3)
v[c(length(v) - 1, length(v))]
"-2" "-3"

### Exercise 2b, determine the type of the previous vector
______(v)
class(v)
"character"

### Operations with vectors

v <- 1:10
v
1  2  3  4  5  6  7  8  9 10

sum(v) # sum function
55

v + 1
2  3  4  5  6  7  8  9 10 11

v * 2
2  4  6  8 10 12 14 16 18 20

v + v
2  4  6  8 10 12 14 16 18 20

